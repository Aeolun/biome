use crate::kind_src::KindsSrc;

pub const PHP_KINDS_SRC: KindsSrc = KindsSrc {
    punct: &[
        ("[", "L_BRACK"),
        ("]", "R_BRACK"),
        ("(", "L_PAREN"),
        (")", "R_PAREN"),
        ("{", "L_CURLY"),
        ("}", "R_CURLY"),
        (".", "DOT"),
        ("->", "T_OBJECT_OPERATOR"),
        ("++", "T_INC"),
        ("--", "T_DEC"),
        ("**", "T_POW"),
        ("*", "STAR"),
        ("+", "PLUS"),
        ("-", "MINUS"),
        ("~", "BITWISE_NOT"),
        ("!", "NOT"),
        ("$", "DOLLAR"),
        ("/", "SLASH"),
        ("%", "PERCENT"),
        ("<<", "T_SL"),
        (">>", "T_SR"),
        ("<", "L_ANGLE"),
        (">", "R_ANGLE"),
        ("<=", "T_IS_SMALLER_OR_EQUAL"),
        (">=", "T_IS_GREATER_OR_EQUAL"),
        ("==", "T_IS_EQUAL"),
        ("===", "T_IS_IDENTICAL"),
        ("!=", "T_IS_NOT_EQUAL"),
        ("<>", "T_IS_NOT_EQUAL"),
        ("!==", "T_IS_NOT_IDENTICAL"),
        ("^", "BITWISE_XOR"),
        ("|", "BITWISE_OR"),
        ("&", "BITWISE_AND"),
        ("&&", "T_BOOLEAN_AND"),
        ("||", "T_BOOLEAN_OR"),
        ("?", "QUESTION"),
        (":", "COLON"),
        (";", "SEMICOLON")
    ],
    keywords: &[
        "abstract",
        "and",
        "array",
        "as",
        "break",
        "callable",
        "case",
        "catch",
        "class",
        "clone",
        "const",
        "continue",
        "declare",
        "default",
        "die",
        "do",
        "echo",
        "else",
        "elseif",
        "empty",
        "enddeclare",
        "endfor",
        "endforeach",
        "endif",
        "endswitch",
        "endwhile",
        "eval",
        "exit",
        "extends",
        "final",
        "finally",
        "fn",
        "for",
        "foreach",
        "function",
        "global",
        "goto",
        "if",
        "implements",
        "include",
        "include_once",
        "instanceof",
        "insteadof",
        "interface",
        "isset",
        "list",
        "namespace",
        "new",
        "or",
        "print",
        "private",
        "protected",
        "public",
        "require",
        "require_once",
        "return",
        "static",
        "switch",
        "throw",
        "trait",
        "try",
        "unset",
        "use",
        "var",
        "while",
        "xor",
        "yield",
        "yield from",
    ],
    literals: &["PHP_STRING_LITERAL"],
    tokens: &[],
    nodes: &[
        "PHP_ROOT",
        "PHP_SCRIPT",
        "PHP_STATEMENT_LIST",
        // Bogus nodes
        "PHP_BOGUS",
    ],
};
