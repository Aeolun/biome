---
import "../styles/index.scss";

const {props} = Astro;
const {frontmatter = {}, bodyClass} = props;

const socialImage = frontmatter.socialImage ?? props.socialImage ?? "social-logo.png";

const description = frontmatter.description ?? props.description ?? "";

let title = props.title ?? frontmatter.title ?? "";
title = title.trim();
if (!title.includes("Rome")) {
	if (title !== "") {
		title += " \u2014 ";
	}
	title += "Rome";
}

function base64Encode(buffer: Buffer, ext: string) {
	if (ext === "svg") {
		return `data:image/svg+xml;utf8,${encodeURIComponent(buffer.toString())}`;
	}

	let mime = `image/${ext}`;
	if (ext === "woff2") {
		mime = "application/x-font-woff";
	}

	return `data:${mime};base64,${buffer.toString("base64")}`;
}

const { default: favicon } = await import("/public/img/favicon.svg?raw");
const { default: script } = await import("/public/script.js?url&raw");
---

<!doctype html>
<html lang="en" data-theme="auto">
	<head>
		<meta charset="utf8" />
		<title>{props.titleHead ?? title}</title>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">

		<link rel="mask-icon" href="/img/pinned-rome-logo.svg" color="#FFC905">
		<link rel="alternate icon" type="image/png" href="/img/favicon.png">
		<link rel="icon" type="image/svg+xml" href={base64Encode(favicon, "svg")}>
		<link rel="alternate" type="application/atom+xml" title="Rome blog feed" href="/feed.xml" />

		<link rel="preload" href="/fonts/Inter-Regular.woff2" as="font" type="font/woff2" crossorigin>
		<link rel="preload" href="/fonts/Inter-Bold.woff2" as="font" type="font/woff2" crossorigin>
		<link rel="preload" href="/fonts/Inter-Medium.woff2" as="font" type="font/woff2" crossorigin>

		<meta name="description" content={description}>
		<meta name="theme-color" content="#FFC905">
		<meta property="og:title" content={title}>
		<meta property="og:description" content={description}>
		<meta property="og:image" content={`${import.meta.env.SITE}img/${socialImage}`}>
		<meta property="twitter:image" content={`${import.meta.env.SITE}img/${socialImage}`}>
		<meta property="twitter:site" content="@rometools">
		<meta property="twitter:creator" content="@rometools">
		<meta property="twitter:image:alt" content="Logo for Rome Tools">
		<meta property="twitter:card" content="summary_large_image">

		<script is:inline>
			(function () {
				const currentTheme = localStorage.getItem('data-theme');
				if (currentTheme != null) {
					document.documentElement.setAttribute("data-theme", currentTheme);
				}
			})();
		</script>
	</head>

	<body class={bodyClass}>
		<slot />

		<script async defer is:inline set:html={script}></script>
	</body>
</html>
